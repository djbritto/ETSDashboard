@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="apple-touch-icon" sizes="76x76" href="~/Content/assets/img/apple-icon.png">
    <link rel="icon" type="image/png" href="~/Content/assets/img/favicon.png">
    <title>
        Black Dashboard by Creative Tim
    </title>
    <!--     Fonts and icons     -->
    <link href="https://fonts.googleapis.com/css?family=Poppins:200,300,400,600,700,800" rel="stylesheet" />
    <link href="https://use.fontawesome.com/releases/v5.0.6/css/all.css" rel="stylesheet">
    <!-- Nucleo Icons -->
    <link href="~/Content/assets/css/nucleo-icons.css" rel="stylesheet" />
    <!-- CSS Files -->
    <link href="~/Content/assets/css/black-dashboard.css?v=1.0.0" rel="stylesheet" />
    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link href="~/Content/assets/demo/demo.css" rel="stylesheet" />
    <link href="~/Content/assets/demo/demo.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <style type="text/css">
        #result {
            text-align: right;
            color: gray;
            min-height: 2em;
        }

        #table-sparkline {
            margin: 0 auto;
            border-collapse: collapse;
        }

        th {
            font-weight: bold;
            text-align: left;
        }

        td, th {
            padding: 5px;
            border-bottom: 1px solid silver;
            height: 20px;
        }

        thead th {
            border-top: 2px solid gray;
            border-bottom: 2px solid gray;
        }

        .highcharts-tooltip > span {
            background: white;
            border: 1px solid silver;
            border-radius: 3px;
            box-shadow: 1px 1px 2px #888;
            padding: 8px;
        }

        #container {
            height: 1000px;
        }

        .highcharts-figure, .highcharts-data-table table {
            min-width: 320px;
            max-width: 700px;
            margin: 1em auto;
        }

        .highcharts-data-table table {
            font-family: Verdana, sans-serif;
            border-collapse: collapse;
            border: 1px solid #EBEBEB;
            margin: 10px auto;
            text-align: center;
            width: 100%;
            max-width: 500px;
        }

        .highcharts-data-table caption {
            padding: 1em 0;
            font-size: 1.2em;
            color: #555;
        }

        .highcharts-data-table th {
            font-weight: 600;
            padding: 0.5em;
        }

        .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
            padding: 0.5em;
        }

        .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
            background: #f8f8f8;
        }

        .highcharts-data-table tr:hover {
            background: #f1f7ff;
        }

        .card-tasks .card-body i {
            color: #54587f;
            font-size: 1.4em;
        }

        .table-full-width {
            max-height: 1100px !important;
        }

        .card-tasks {
            height: 800px;
        }

        .difference {
            text-align: center;
        }
    </style>
</head>

<body class="">
    <div class="wrapper">
        @{ Html.RenderAction("SideMenu", "dashboard");}
        <div class="main-panel">
            <!-- End Navbar -->
            <div class="content">
                <div class="row">
                    <div class="col-md-12 col-lg-12 ">
                        <div class="card card-tasks">
                            <div class="card-header ">
                                <h6 class="title d-inline">Application Summary</h6>
                                <p class="card-category d-inline">Date : @DateTime.Now</p>
                                <div class="dropdown">
                                    <button type="button" class="btn btn-link dropdown-toggle btn-icon" data-toggle="dropdown">
                                        <i class="tim-icons icon-settings-gear-63"></i>
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                        <a class="dropdown-item" href="#spchart">Action</a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body ">
                                <div class="table-full-width table-responsive">
                                    @*<div id="result"></div>*@
                                    <table id="table-sparkline" class="table">
                                        <thead>
                                            <tr>
                                                <th style="width:10%;text-align: center;">Application</th>
                                                <th style="width:30%;text-align: center;">Fixed Trend</th>
                                                <th style="width:15%;text-align: left;">
                                                    Fixed Usage Difference
                                                </th>
                                                <th style="text-align: left;">
                                                    Fixed Avg
                                                </th>
                                                <th style="width:30%;text-align: center;">Mobile Trend</th>
                                                <th style="width:25%;text-align: left;">
                                                    Mobile Usage Difference
                                                </th>
                                                <th style="text-align: left;">
                                                    Mobile Avg
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="tbody-sparkline">
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!--   Core JS Files   -->
    <script src="~/Content/assets/js/core/jquery.min.js"></script>
    <script src="~/Content/assets/js/core/popper.min.js"></script>
    <script src="~/Content/assets/js/core/bootstrap.min.js"></script>
    <script src="~/Content/assets/js/plugins/perfect-scrollbar.jquery.min.js"></script>
    <!--  Google Maps Plugin    -->
    <!-- Place this tag in your head or just before your close body tag. -->
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_KEY_HERE"></script>
    <!-- Chart JS -->
    <script src="~/Content/assets/js/plugins/chartjs.min.js"></script>
    <!--  Notifications Plugin    -->
    <script src="~/Content/assets/js/plugins/bootstrap-notify.js"></script>
    <!-- Control Center for Black Dashboard: parallax effects, scripts for the example pages etc -->
    <script src="~/Content/assets/js/black-dashboard.min.js?v=1.0.0"></script><!-- Black Dashboard DEMO methods, don't include it in your project! -->
    <script src="~/Content/assets/demo/demo.js"></script>


    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>


    <script src="https://code.highcharts.com/modules/variable-pie.js"></script>



    <script>
        $(document).ready(function () {
            $().ready(function () {
                $sidebar = $('.sidebar');
                $navbar = $('.navbar');
                $main_panel = $('.main-panel');

                $full_page = $('.full-page');

                $sidebar_responsive = $('body > .navbar-collapse');
                sidebar_mini_active = true;
                white_color = false;

                window_width = $(window).width();

                fixed_plugin_open = $('.sidebar .sidebar-wrapper .nav li.active a p').html();



                $('.fixed-plugin a').click(function (event) {
                    if ($(this).hasClass('switch-trigger')) {
                        if (event.stopPropagation) {
                            event.stopPropagation();
                        } else if (window.event) {
                            window.event.cancelBubble = true;
                        }
                    }
                });

                $('.fixed-plugin .background-color span').click(function () {
                    $(this).siblings().removeClass('active');
                    $(this).addClass('active');

                    var new_color = $(this).data('color');

                    if ($sidebar.length != 0) {
                        $sidebar.attr('data', new_color);
                    }

                    if ($main_panel.length != 0) {
                        $main_panel.attr('data', new_color);
                    }

                    if ($full_page.length != 0) {
                        $full_page.attr('filter-color', new_color);
                    }

                    if ($sidebar_responsive.length != 0) {
                        $sidebar_responsive.attr('data', new_color);
                    }
                });

                $('.switch-sidebar-mini input').on("switchChange.bootstrapSwitch", function () {
                    var $btn = $(this);

                    if (sidebar_mini_active == true) {
                        $('body').removeClass('sidebar-mini');
                        sidebar_mini_active = false;
                        blackDashboard.showSidebarMessage('Sidebar mini deactivated~/Content.');
                    } else {
                        $('body').addClass('sidebar-mini');
                        sidebar_mini_active = true;
                        blackDashboard.showSidebarMessage('Sidebar mini activated~/Content.');
                    }

                    // we simulate the window Resize so the charts will get updated in realtime.
                    var simulateWindowResize = setInterval(function () {
                        window.dispatchEvent(new Event('resize'));
                    }, 180);

                    // we stop the simulation of Window Resize after the animations are completed
                    setTimeout(function () {
                        clearInterval(simulateWindowResize);
                    }, 1000);
                });

                $('.switch-change-color input').on("switchChange.bootstrapSwitch", function () {
                    var $btn = $(this);

                    if (white_color == true) {

                        $('body').addClass('change-background');
                        setTimeout(function () {
                            $('body').removeClass('change-background');
                            $('body').removeClass('white-content');
                        }, 900);
                        white_color = false;
                    } else {

                        $('body').addClass('change-background');
                        setTimeout(function () {
                            $('body').removeClass('change-background');
                            $('body').addClass('white-content');
                        }, 900);

                        white_color = true;
                    }


                });

                $('.light-badge').click(function () {
                    $('body').addClass('white-content');
                });

                $('.dark-badge').click(function () {
                    $('body').removeClass('white-content');
                });
            });
        });</script>
    <script>
        $(document).ready(function () {
            // Javascript method's body can be found in assets/js/demos.js
            demo.initDashboardPageCharts();

        });</script>
    <script src="https://cdn.trackjs.com/agent/v3/latest/t.js"></script>
    <script>
        window.TrackJS &&
            TrackJS.install({
                token: "ee6fab19c5a04ac1a32a645abde4613a",
                application: "black-dashboard-free"
            });</script>




    <script id="spline-template" type="text/x-handlebars-template">
        {{#each applicationData}}
        <tr data-id={{id}}>
            <th>{{ApplicationName}}</th>
            <td data-sparkline="{{UsuageDetailsJson}}" class="data-fixed" />
            <td class="difference" style="">
                {{#iff Fixed_UsuageDifference '<' 0}}
                <div class="row"><div class="col-lg-4 col-md-4" style="text-align:right;"><i class="fa fa-arrow-up" aria-hidden="true"></i></div><div class="col-lg-8 col-md-8">{{Fixed_UsuageDifference}}</div></div>
                {{else}}

                {{#iff Fixed_UsuageDifference '==' 0}}
                <div class="row"><div class="col-lg-4 col-md-4" style="text-align:right;">&nbsp;</div><div class="col-lg-8 col-md-8">{{Fixed_UsuageDifference}}</div></div>
                {{else}}
                <div class="row"><div class="col-lg-4 col-md-4" style="text-align:right;"><i class="fa fa-arrow-down" aria-hidden="true"></i></div><div class="col-lg-8 col-md-8">{{Fixed_UsuageDifference}}</div></div>
                {{/iff}}

                {{/iff}}
            </td>
            <td>{{Fixed_Avg_Usage}}</td>
            <td data-sparkline="{{UsuageDetailsJson}}" class="data-mobile" />
            <td class="difference" style="">
                {{#iff Mobile_UsuageDifference '<' 0}}
                <div class="row"><div class="col-lg-4 col-md-4" style="text-align:right;"><i class="fa fa-arrow-up" aria-hidden="true"></i></div><div class="col-lg-8 col-md-8">{{Mobile_UsuageDifference}}</div></div>
                {{else}}

                {{#iff Mobile_UsuageDifference '==' 0}}
                <div class="row"><div class="col-lg-4 col-md-4" style="text-align:right;">&nbsp;</div><div class="col-lg-8 col-md-8">{{Mobile_UsuageDifference}}</div></div>
                {{else}}
                <div class="row"><div class="col-lg-4 col-md-4" style="text-align:right;"><i class="fa fa-arrow-down" aria-hidden="true"></i></div><div class="col-lg-8 col-md-8">{{Mobile_UsuageDifference}}</div></div>
                {{/iff}}

                {{/iff}}
            </td>
            <td>{{Mobile_Avg_Usage}}</td>
        </tr>
        {{/each}}
    </script>

    <script type="text/javascript">

        /**
* Create a constructor for sparklines that takes some sensible defaults and merges in the individual
* chart options. This function is also available from the jQuery plugin as $(element).highcharts('SparkLine').
*/
        Highcharts.SparkLine = function (a, b, c) {
            var hasRenderToArg = typeof a === 'string' || a.nodeName,
                options = arguments[hasRenderToArg ? 1 : 0],
                defaultOptions = {
                    chart: {
                        renderTo: (options.chart && options.chart.renderTo) || this,
                        backgroundColor: null,
                        borderWidth: 0,
                        type: 'area',
                        margin: [2, 0, 2, 0],
                        //width: 120,
                        //height: 20,
                        style: {
                            overflow: 'visible'
                        },

                        // small optimalization, saves 1-2 ms each sparkline
                        skipClone: true
                    },
                    title: {
                        text: ''
                    },
                    credits: {
                        enabled: false
                    },
                    xAxis: {
                        labels: {
                            enabled: false
                        },
                        title: {
                            text: null
                        },
                        startOnTick: false,
                        endOnTick: false,
                        tickPositions: []
                    },
                    yAxis: {
                        endOnTick: false,
                        startOnTick: false,
                        labels: {
                            enabled: false
                        },
                        title: {
                            text: null
                        },
                        tickPositions: [0]
                    },
                    legend: {
                        enabled: false
                    },
                    tooltip: {
                        hideDelay: 0,
                        outside: true,
                        shared: true
                    },
                    plotOptions: {
                        series: {
                            animation: false,
                            lineWidth: 1,
                            shadow: false,
                            states: {
                                hover: {
                                    lineWidth: 1
                                }
                            },
                            marker: {
                                radius: 1,
                                states: {
                                    hover: {
                                        radius: 2
                                    }
                                }
                            },
                            fillOpacity: 0.25
                        },
                        column: {
                            negativeColor: '#910000',
                            borderColor: 'silver'
                        }
                    }
                };

            options = Highcharts.merge(defaultOptions, options);

            return hasRenderToArg ?
                new Highcharts.Chart(a, options, c) :
                new Highcharts.Chart(options, b);
        };


        // Creating 153 sparkline charts is quite fast in modern browsers, but IE8 and mobile
        // can take some seconds, so we split the input into chunks and apply them in timeouts
        // in order avoid locking up the browser process and allow interaction.
        function doChunk() {

            var start = +new Date(),
                $tds = $('td[data-sparkline]'),
                fullLen = $tds.length,
                n = 0;

            var ChartReference = {};

            var time = +new Date(),
                i,
                len = $tds.length,
                $td,
                stringdata,
                arr,
                data,
                chart;

            //var colors = [
            //    "#ef5350", "#EC407A", "#AB47BC", "#7E57C2", "#5C6BC0", "#42A5F5", "#29B6F6", "#26C6DA", "#26A69A", "#66BB6A", "#9CCC65", "#D4E157", "#FFEE58", "#FFCA28", "#FFA726", "#FF7043"
            //];

            // var colors = [
            //     "#29B6F6"
            //];

             var colors = ["#42A5F5"];

            for (i = 0; i < len; i += 1) {
                var series = [];
                series.push({ data: [] });
                $td = $($tds[i]);
                jsonData = $td.data('sparkline');
                var id = parseInt($td.parent().data('id'));
                var fixed = $td.hasClass("data-fixed");

                for (var j = 0, l = jsonData.length; j < l; j++) {

                    var dateVal = Date.parse(jsonData[j].UsuageDateStr);

                    if (fixed) {
                        series[0].data[j] = [dateVal, jsonData[j].Fixed_Usage];
                    } else {
                        series[0].data[j] = [dateVal, jsonData[j].Mobile_Usage];
                    }

                }
                var color = colors[id % colors.length];
                series[0].color = color;
                console.log(series);

                $td.parent().find('th').css('color', color);
                $td.parent().find('.difference').attr('style', 'color : ' + color + ' !important');
                //var width = $($td).width();
                //chart = { "width": width };

                var width = $($td).width();
                chart = {};

                //if (arr[1]) {
                //    chart.type = arr[1];
                //}
                var highcharts = $td.highcharts('SparkLine', {
                    series: series,
                    tooltip: {
                        headerFormat: '<span style="font-size: 10px">' + $td.parent().find('th').html() + ', {point.x:%d-%b-%y}</span><br/>',
                        pointFormat: '<b>{point.y}</b> PB'
                    },
                    chart: chart,
                    xAxis: {
                        type: 'datetime'
                    },
                }).highcharts();




                n += 1;


                if (n === fullLen) {
                    $('#result').html('Generated ' + fullLen + ' sparklines in ' + (new Date() - start) + ' ms');
                }


                 
            }

             

            Highcharts.charts.forEach(chart => {
                // $(chart.container).width($(chart.container).parent().width() - 10);
                //  $(chart.container).find("svg").width($(chart.container).parent().width() - 10);
                chart.reflow();
            });

            $(".highcharts-xaxis").find('.highcharts-axis-line').attr('stroke', '#37474F')
        }




        function bindData(data) {
            for (var i = 0; i < data.applicationData.length; i++) {
              
                data.applicationData[i].id = i;
                data.applicationData[i].UsuageDetailsJson = JSON.stringify(data.applicationData[i].UsuageDetails);

            }
            var source = document.getElementById("spline-template").innerHTML;
            var template = Handlebars.compile(source);
            var html = template(data);
            $("#tbody-sparkline").html(html);
            doChunk();
        };

        Handlebars.registerHelper('iff', function (a, operator, b, opts) {
            var bool = false;
            switch (operator) {
                case '==':
                    bool = a == b;
                    break;
                case '>':
                    bool = a > b;
                    break;
                case '<':
                    bool = a < b;
                    break;
                default:
                    throw "Unknown operator " + operator;
            }

            if (bool) {
                return opts.fn(this);
            } else {
                return opts.inverse(this);
            }
        });

        $(function () {
            $.getJSON("/dashboard/GetSparkData", function (data) {


                bindData(data);
            });
        });




    </script>

</body>

</html>